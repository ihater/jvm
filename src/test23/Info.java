package test23;
/**
 *  这么多类加载器是如何协同工作的！！
 *  	双亲委派模型：
 *  		1、如果一个类加载器收到类加载请求，它首先不会自己去尝试加载这个类，而是把类加载请求委派给父类去完成
 *  		2、每一层的类加载器都把类加载请求委派给父类加载器，直到所有的类加载请求都应该传递给顶层的启动类加载器。
 *  		3、如果顶层的启动类加载器无法完成加载请求，子类加载器尝试去加载，如果连最初发起类加载请求的类加载器都无法完成类加载
 *  			就会抛出 ClassNotFoundException，而不再调用其子类加载器去完成。
 *  		4、双亲委派模式的 类加载机制的优点是，Java类   它的类加载器一起具备了一种带优先级的层次关系。
 *  			越是基础的类，越是被上层的类加载器进行加载，保证Java的稳定运行
 *  
 *  		其实该谁加载还是谁加载，因为每个类加载器，负责的范围不一样。
 *  		比如，启动类加载器，用于加载javahome下的lib目录下的类，其他目录 下的类，它找不到
 *  		就会抛出异常，交给 扩展类加载器，如果再找不到，再抛出异常，就交给应用程序类加载器，最后还是自定义类加载器背锅
 *  
 *  	自定义类加载器，可能破坏双亲委派模型，因为不是强制使用的。
 */
public class Info {

}






