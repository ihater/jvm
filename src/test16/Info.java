package test16;
/**
 * 	栈上分配：
 * 		就是说，一个参数变量，不一定要存在 栈上，可以寻求其他存储空间
 * 		每一个对象，都要有一个栈帧，方法执行，栈帧进栈，方法执行完，栈帧出栈
 * 		如果这个帧，能够根据方法的执行，进行自动回收，就不用触发GC
 * 
 * 	利用逃逸分析，将变量存到栈上
 * 		利用逃逸分析，分析哪些变量没有在栈 上，就是分析哪些没有逃逸的对象
 * 		在栈上进行分配
 * 
 * 	逃逸分析：
 * 		就是JVM进行性能优化前的一种分析技术。就是分析对象的作用域	
 * 		分析作用域的作用：当一个变量定义在方法体的内部，它的受访问权限就只有在方法体内
 * 		但是，如果这个变量跟方法体外的变量进行了引用，就称这个对象发生了逃逸
 * 		
 * 		如果这个对象，一直都只在方法体内有效，就称这个对象   没有发生逃逸，就可以把这种对象分配到栈上
 */
public class Info {

}
