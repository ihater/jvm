package test22;
/**
 * 类加载器：
 * 		编译时java----> 字节码，类加载是 字节码 --- > 存储在内存的二进制流
 * 		Java牛逼的地方，可以通过一个类的全限定名来获取描述此类的二进制字节流
 * 		这个动作方法到Java虚拟机外部去实现，以便让应用程序自己决定如何去获取所需要的类
 * 		实现这个动作的代码模块成为类加载器
 * 		
 * 		只有被同一个类加载器加载的类才可能会相等，相同的字节码别不同的类加载器加载的类不相等
 * 		因为不同类加载器实现不一样
 * 		
 * 	类加载器分类：
 * 		启动类加载器
 * 			由C++实现，是虚拟机的一部分，用于加载javahome下的lib目录下的类
 * 		扩展类加载器
 * 			加载javahome/lib/ext 目录中的类
 * 		应用程序类加载器：
 * 			加载用户路径上的所指定的类库（我们看到做多，接触最多的）
 * 		自定义类加载器
 * 			定义一个类，继承ClassLoader，重写loadClass方法，实例化Class对象（有Demo）
 * 			通过自定义类加载器可以实现热部署
 * 			自己解析字节码，做代码加密
 */
public class Info {

}
