package test7;
/**
 *	给对象分配内存：
 *		指针碰撞（内存连续空间）
 *		空闲列表（内存空闲不连续，用一张表维护零散的空闲内存）
 *	
 *	对分配内存的方式，是由内存空闲的状态决定的，
 *	内存怎么空的，又是GC决定的 ，比如有些垃圾回收器，有压缩整理的过程，会把内存规划成连续的
 *
 *	内存分配过程中的线程安全问题：
 *		如果同一时刻有多个线程在内存开辟空间，可能产生线程问题
 *		比如空闲列表的方式，我们查到某个内存是空闲的，申请使用这块内存，还来不及更新空闲表
 *		在这个时候，另一个线程也查到这块内存四空闲的
 *	
 *	解决线程安全性问题：
 *		TLAB：本地线程分配缓存
 *		给内个线程，划分特定的内存区域去申请，这样就不会产生线程安全性问题
 */
public class Info {
	/**
	 *  对象的创建：
	 *  	给对象分配内存
	 *  	线程安全性问题
	 *  	初始化对象（静态代码块之类的）
	 *  	执行构造方法
	 */
}
